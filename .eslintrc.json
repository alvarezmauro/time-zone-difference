{
  "$schema": "https://json.schemastore.org/eslintrc",
  "root": true,
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "prettier",
    "next/core-web-vitals",
    "plugin:tailwindcss/recommended"
  ],
  "env": {
    "browser": true,
    "commonjs": true,
    "es2022": true,
    "node": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json"
  },
  "plugins": ["tailwindcss", "import"],
  "rules": {
    // Base
    "no-underscore-dangle": "off",
    "no-unused-expressions": [
      "error",
      {
        "allowTaggedTemplates": true,
        "allowShortCircuit": true,
        "allowTernary": true
      }
    ],
    "consistent-return": "off",
    "max-nested-callbacks": ["error", 3],
    "quotes": [
      "error",
      "double",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    // React
    "react/jsx-key": "off",
    "react/prop-types": "off",
    "react/forbid-prop-types": "off",
    "react/no-unescaped-entities": "off",
    "react/function-component-definition": "off",
    "react/require-default-props": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-uses-react": "off",
    "react/jsx-pascal-case": "off",
    // Typescript
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/await-thenable": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-use-before-define": "off",

    // This allows us to use async function on addEventListener(). Discussion: https://twitter.com/wesbos/status/1337074242161172486
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    // NextJs
    "@next/next/no-html-link-for-pages": "off",
    // Tailwind
    "tailwindcss/no-custom-classname": "off",
    // Import
    "import/extensions": "off",
    "import/prefer-default-export": "off"
  },
  "settings": {
    "tailwindcss": {
      "callees": ["cn"],
      "config": "tailwind.config.js"
    },
    "next": {
      "rootDir": ["./"]
    }
  },
  "overrides": [
    {
      "files": ["*.ts", "*.mts", "*.cts", "*.tsx"],
      "rules": {
        "no-undef": "off"
      }
    }
  ]
}
